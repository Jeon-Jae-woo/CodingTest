import java.util.ArrayList;

public class NewId {
    public String solution(String new_id) {
        String answer = "";
        
        /*
        1단계 new_id의 모든 대문자를 대응되는 소문자로 치환합니다.
        2단계 new_id에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거합니다.
        3단계 new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다.
        4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다.
        5단계 new_id가 빈 문자열이라면, new_id에 "a"를 대입합니다.
        6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다.
             만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다.
        7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입니다.
         */
        
        //step 1
        new_id = new_id.toLowerCase();
        ArrayList<String> sList = new ArrayList<String>();
        char[] tempC = new_id.toCharArray();
        
        //step 2
        for(char c : tempC) {
        	if((c >= '0' && c <= '9') || (c >= 'a' && c <='z')) {
        		sList.add(String.valueOf(c));
        	}else if(c == '-' || c == '_' || c == '.') {
        		sList.add(String.valueOf(c));
        	}
        }
        
        //step 3
        int index = 0;
        while(index < sList.size()) {
        	if(index != sList.size()-1) {
        		if(sList.get(index).equals(".") && sList.get(index+1).equals(".")){
        			sList.remove(index);
        			index=0;
        		}else {
        			index++;
        		}
        	}else {
        		index++;
        	}
        }

        //step 4
        if(sList.size() > 0) {
	        if(sList.get(0).equals(".")) {
	        	sList.remove(0);
	        }
        }
	    if(sList.size() > 0) {
	        if(sList.get(sList.size()-1).equals(".")) {
	        	sList.remove(sList.size()-1);
	        }
	    }
        
        //step 5
        if(sList.size() == 0) {
        	sList.add("a");
        }
        
        //step 6
        answer = String.join("", sList);
        if(answer.length() >= 16) {
        	answer = answer.substring(0,15);
        }
        if(answer.charAt(answer.length()-1) == '.') {
        	answer = answer.substring(0,answer.length()-1);
        }
        
        //step 7
        if(answer.length() <= 2) {
        	while(answer.length() != 3) {
        		answer += answer.substring(answer.length()-1);
        	}
        }
        
        
        return answer;
    }

}
